/*
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments. 
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.payone.commerce.platform.models;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Object containing the mobile payment method details.
 */
@JsonPropertyOrder({
  MobilePaymentMethodSpecificOutput.JSON_PROPERTY_PAYMENT_PRODUCT_ID,
  MobilePaymentMethodSpecificOutput.JSON_PROPERTY_AUTHORISATION_CODE,
  MobilePaymentMethodSpecificOutput.JSON_PROPERTY_FRAUD_RESULTS,
  MobilePaymentMethodSpecificOutput.JSON_PROPERTY_THREE_D_SECURE_RESULTS,
  MobilePaymentMethodSpecificOutput.JSON_PROPERTY_NETWORK
})
public class MobilePaymentMethodSpecificOutput implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PAYMENT_PRODUCT_ID = "paymentProductId";
  private Integer paymentProductId;

  public static final String JSON_PROPERTY_AUTHORISATION_CODE = "authorisationCode";
  private String authorisationCode;

  public static final String JSON_PROPERTY_FRAUD_RESULTS = "fraudResults";
  private CardFraudResults fraudResults;

  public static final String JSON_PROPERTY_THREE_D_SECURE_RESULTS = "threeDSecureResults";
  private ThreeDSecureResults threeDSecureResults;

  public static final String JSON_PROPERTY_NETWORK = "network";
  private String network;

  public MobilePaymentMethodSpecificOutput() {
  }

  public MobilePaymentMethodSpecificOutput paymentProductId(Integer paymentProductId) {
    
    this.paymentProductId = paymentProductId;
    return this;
  }

   /**
   * Payment product identifier - please check product documentation for a full overview of possible values.
   * minimum: 0
   * maximum: 99999
   * @return paymentProductId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPaymentProductId() {
    return paymentProductId;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentProductId(Integer paymentProductId) {
    this.paymentProductId = paymentProductId;
  }


  public MobilePaymentMethodSpecificOutput authorisationCode(String authorisationCode) {
    
    this.authorisationCode = authorisationCode;
    return this;
  }

   /**
   * Card Authorization code as returned by the acquirer
   * @return authorisationCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORISATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorisationCode() {
    return authorisationCode;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORISATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorisationCode(String authorisationCode) {
    this.authorisationCode = authorisationCode;
  }


  public MobilePaymentMethodSpecificOutput fraudResults(CardFraudResults fraudResults) {
    
    this.fraudResults = fraudResults;
    return this;
  }

   /**
   * Get fraudResults
   * @return fraudResults
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FRAUD_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CardFraudResults getFraudResults() {
    return fraudResults;
  }


  @JsonProperty(JSON_PROPERTY_FRAUD_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFraudResults(CardFraudResults fraudResults) {
    this.fraudResults = fraudResults;
  }


  public MobilePaymentMethodSpecificOutput threeDSecureResults(ThreeDSecureResults threeDSecureResults) {
    
    this.threeDSecureResults = threeDSecureResults;
    return this;
  }

   /**
   * Get threeDSecureResults
   * @return threeDSecureResults
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THREE_D_SECURE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ThreeDSecureResults getThreeDSecureResults() {
    return threeDSecureResults;
  }


  @JsonProperty(JSON_PROPERTY_THREE_D_SECURE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThreeDSecureResults(ThreeDSecureResults threeDSecureResults) {
    this.threeDSecureResults = threeDSecureResults;
  }


  public MobilePaymentMethodSpecificOutput network(String network) {
    
    this.network = network;
    return this;
  }

   /**
   * The card network that was used for a mobile payment method operation
   * @return network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetwork() {
    return network;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetwork(String network) {
    this.network = network;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MobilePaymentMethodSpecificOutput mobilePaymentMethodSpecificOutput = (MobilePaymentMethodSpecificOutput) o;
    return Objects.equals(this.paymentProductId, mobilePaymentMethodSpecificOutput.paymentProductId) &&
        Objects.equals(this.authorisationCode, mobilePaymentMethodSpecificOutput.authorisationCode) &&
        Objects.equals(this.fraudResults, mobilePaymentMethodSpecificOutput.fraudResults) &&
        Objects.equals(this.threeDSecureResults, mobilePaymentMethodSpecificOutput.threeDSecureResults) &&
        Objects.equals(this.network, mobilePaymentMethodSpecificOutput.network);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentProductId, authorisationCode, fraudResults, threeDSecureResults, network);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MobilePaymentMethodSpecificOutput {\n");
    sb.append("    paymentProductId: ").append(toIndentedString(paymentProductId)).append("\n");
    sb.append("    authorisationCode: ").append(toIndentedString(authorisationCode)).append("\n");
    sb.append("    fraudResults: ").append(toIndentedString(fraudResults)).append("\n");
    sb.append("    threeDSecureResults: ").append(toIndentedString(threeDSecureResults)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `paymentProductId` to the URL query string
    if (getPaymentProductId() != null) {
      try {
        joiner.add(String.format("%spaymentProductId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPaymentProductId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `authorisationCode` to the URL query string
    if (getAuthorisationCode() != null) {
      try {
        joiner.add(String.format("%sauthorisationCode%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAuthorisationCode()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `fraudResults` to the URL query string
    if (getFraudResults() != null) {
      joiner.add(getFraudResults().toUrlQueryString(prefix + "fraudResults" + suffix));
    }

    // add `threeDSecureResults` to the URL query string
    if (getThreeDSecureResults() != null) {
      joiner.add(getThreeDSecureResults().toUrlQueryString(prefix + "threeDSecureResults" + suffix));
    }

    // add `network` to the URL query string
    if (getNetwork() != null) {
      try {
        joiner.add(String.format("%snetwork%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNetwork()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

