/*
 * This source file was generated by the Gradle 'init' task
 */

package com.payone.commerce.platform.lib.endpoints;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.payone.commerce.platform.lib.CommunicatorConfiguration;
import com.payone.commerce.platform.lib.models.CreateCommerceCaseRequest;

import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class CommerceCaseApiClient extends BaseApiClient {

    public CommerceCaseApiClient(CommunicatorConfiguration config) {
        super(config);
    }

    public String createCommerceCaseRequest(String merchantId, CreateCommerceCaseRequest payload) {
        if (merchantId == null) {
            throw new IllegalArgumentException("Merchant ID is required");
        }

        String path = String.format("/v1/%s/commerce-cases", merchantId);
        String url = String.format("https://preprod.commerce-api.payone.com%s", path);

        try {
            ObjectMapper objectMapper = new ObjectMapper();
            String jsonString = objectMapper.writeValueAsString(payload);

            RequestBody formBody = RequestBody.create(jsonString, JSON);

            Request request = new Request.Builder()
                    .url(url)
                    .post(formBody)
                    .build();

            request = this.getRequestHeaderGenerator().generateAdditionalRequestHeaders(request);

            Response response = this.getClient().newCall(request).execute();
            if (!response.isSuccessful()) {
                throw new Exception("Unexpected code " + response);
            }

            return response.body().string();
        } catch (Exception e) {
            throw new RuntimeException("Error processing JSON", e);
        }

    }

    public String getAllCommerceCaseRequest(String merchantId) {
        if (merchantId == null) {
            throw new IllegalArgumentException("Merchant ID is required");
        }

        String path = String.format("/v1/%s/commerce-cases", merchantId);
        String url = String.format("https://preprod.commerce-api.payone.com%s", path);

        try {

            Request request = new Request.Builder()
                    .url(url)
                    .get()
                    .build();

            request = this.getRequestHeaderGenerator().generateAdditionalRequestHeaders(request);

            Response response = this.makeApiCall(request);

            return response.body().string();
        } catch (Exception e) {
            throw new RuntimeException("Error processing JSON", e);
        }

    }
}
