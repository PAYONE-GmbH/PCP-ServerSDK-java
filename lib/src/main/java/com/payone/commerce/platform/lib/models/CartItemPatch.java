/*
 * Commerce Platform API
 * RESTful API for the creation of Commerce Cases with Checkouts and the execution of Payments. 
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.payone.commerce.platform.lib.models;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.StringJoiner;

/**
 * This object contains information of all items in the cart. If a cart item is
 * provided, the productPrice and quantity is required.
 */
@JsonPropertyOrder({
    CartItemPatch.JSON_PROPERTY_INVOICE_DATA,
    CartItemPatch.JSON_PROPERTY_ORDER_LINE_DETAILS
})
public class CartItemPatch implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INVOICE_DATA = "invoiceData";
  private CartItemInvoiceData invoiceData;

  public static final String JSON_PROPERTY_ORDER_LINE_DETAILS = "orderLineDetails";
  private OrderLineDetailsPatch orderLineDetails;

  public CartItemPatch() {
  }

  public CartItemPatch invoiceData(CartItemInvoiceData invoiceData) {

    this.invoiceData = invoiceData;
    return this;
  }

  /**
   * Get invoiceData
   * 
   * @return invoiceData
   **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CartItemInvoiceData getInvoiceData() {
    return invoiceData;
  }

  @JsonProperty(JSON_PROPERTY_INVOICE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceData(CartItemInvoiceData invoiceData) {
    this.invoiceData = invoiceData;
  }

  public CartItemPatch orderLineDetails(OrderLineDetailsPatch orderLineDetails) {

    this.orderLineDetails = orderLineDetails;
    return this;
  }

  /**
   * Get orderLineDetails
   * 
   * @return orderLineDetails
   **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_LINE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderLineDetailsPatch getOrderLineDetails() {
    return orderLineDetails;
  }

  @JsonProperty(JSON_PROPERTY_ORDER_LINE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderLineDetails(OrderLineDetailsPatch orderLineDetails) {
    this.orderLineDetails = orderLineDetails;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartItemPatch cartItemPatch = (CartItemPatch) o;
    return Objects.equals(this.invoiceData, cartItemPatch.invoiceData) &&
        Objects.equals(this.orderLineDetails, cartItemPatch.orderLineDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceData, orderLineDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartItemPatch {\n");
    sb.append("    invoiceData: ").append(toIndentedString(invoiceData)).append("\n");
    sb.append("    orderLineDetails: ").append(toIndentedString(orderLineDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `invoiceData` to the URL query string
    if (getInvoiceData() != null) {
      joiner.add(getInvoiceData().toUrlQueryString(prefix + "invoiceData" + suffix));
    }

    // add `orderLineDetails` to the URL query string
    if (getOrderLineDetails() != null) {
      joiner.add(getOrderLineDetails().toUrlQueryString(prefix + "orderLineDetails" + suffix));
    }

    return joiner.toString();
  }

}
