buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
      if (JavaVersion.current().majorVersion != '8') {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.29.0'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:5.1.0.4882'
      }
    }
}

plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'io.github.kmbisset89.changelog.plugin' version '1.0.4'
}

if (JavaVersion.current().majorVersion != '8') {
   apply plugin: 'com.vanniktech.maven.publish'
   apply plugin: 'org.sonarqube'
}

version = '0.0.2'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.17.2'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.3'
}

jacoco {
    toolVersion = '0.8.8' // Specify the version of JaCoCo you want to use
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.jacocoTestReport {
    dependsOn(tasks.test) 
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'com/payone/**/models/*'
            ])
        }))    
    }
}


if (JavaVersion.current().majorVersion != '8') {
  mavenPublishing {
    publishToMavenCentral('CENTRAL_PORTAL')

    signAllPublications()

    coordinates('io.github.payone-gmbh', 'pcp-serversdk-java', version)

    pom {
      name = 'PCP-SERVERSDK-JAVA'
      description = 'The PAYONE Commerce Platform Java SDK.'
      inceptionYear = '2024'
      url = 'https://github.com/PAYONE-GmbH/PCP-ServerSDK-java'
      licenses {
        license {
          name = 'MIT'     
        }
      }
      developers {
        developer {
          id = 'username'
          name = 'PAYONE-GmbH'
          url = 'https://github.com/PAYONE-GmbH'
        }
      }
      scm {
        url = 'https://github.com/PAYONE-GmbH/PCP-ServerSDK-java'
        connection = 'scm:git:git://github.com/PAYONE-GmbH/PCP-ServerSDK-java.git'
        developerConnection = 'scm:git:ssh://git@github.com/PAYONE-GmbH/PCP-ServerSDK-java.git'
      }
    }
  }

  tasks['sonar'].dependsOn 'jacocoTestReport'

  sonar {
    properties {
      property 'sonar.projectKey', 'PAYONE-GmbH_PCP-ServerSDK-java'
      property 'sonar.projectName', 'PCP-ServerSDK-java'
      property 'sonar.organization', 'payone-gmbh'
      property 'sonar.host.url', 'https://sonarcloud.io'
      property 'sonar.sources', 'src/main'
      property 'sonar.tests', 'src/test'
      property 'sonar.coverage.exclusions', '**/models/**'
      property 'sonar.exclusions', '**/models/**'
    }
  }
}
