def isJavaVersion(int version) {
    return JavaVersion.current().majorVersion == version.toString()
}

if (!isJavaVersion(8)) {
  buildscript {
      repositories {
          mavenCentral()
          gradlePluginPortal()
      }
      dependencies {
          classpath 'com.vanniktech:gradle-maven-publish-plugin:0.29.0'
      }
  }
}

if (!isJavaVersion(8)) {
   apply plugin: 'com.vanniktech.maven.publish'
}

plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id "io.github.kmbisset89.changelog.plugin" version "1.0.4"
}

version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.17.2'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.3'
}

jacoco {
    toolVersion = "0.8.8" // Specify the version of JaCoCo you want to use
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.jacocoTestReport {
    dependsOn(tasks.test) 
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                "com/payone/**/models/*"
            ])
        }))    
    }
}

mavenPublishing {
  publishToMavenCentral("CENTRAL_PORTAL")

  signAllPublications()

  coordinates("io.github.payone-gmbh", "pcp-serversdk-java", version)

  pom {
    name = "PCP-SERVERSDK-JAVA"
    description = "The PayOne PCP Java SDK."
    inceptionYear = "2024"
    url = "https://github.com/PAYONE-GmbH/PCP-ServerSDK-java"
    licenses {
      license {
        name = "MIT"     
      }
    }
    developers {
      developer {
        id = "username"
        name = "PayOne-GmbH"
        url = "https://github.com/PAYONE-GmbH"
      }
    }
    scm {
      url = "https://github.com/PAYONE-GmbH/PCP-ServerSDK-java"
      connection = "scm:git:git://github.com/PAYONE-GmbH/PCP-ServerSDK-java.git"
      developerConnection = "scm:git:ssh://git@github.com/PAYONE-GmbH/PCP-ServerSDK-java.git"
    }
  }
}